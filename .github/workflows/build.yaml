name: Build
on: [push]

permissions:
  actions: read
  contents: read

jobs:
  test:
    environment: build
    runs-on: ubuntu-latest
    name: Test App
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11' 
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Install node dev requirements
        run: npm install --dev
      - name: Run lint
        run: npx eslint ./js/*.js
      - name: Check configuration
        run: python test/test_config.py pt/index.json pt/scenarios.json
      - name: Render templates
        run: bash support/render_template.sh
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.CROSS_TOKEN }}
          workflow: pipelines.yaml
          workflow_conclusion: success
          branch: main
          path: data
          repo: SchmidtDSE/plastics-pipeline
      - name: Move web CSV
        run: bash support/move_data.sh
      - name: Build
        shell: bash
        run: |
          chmod +x "./support/make.sh"
          chmod +x "./support/npm_install.sh"
          "./support/npm_install.sh"
          "./support/make.sh"
      - name: Install JS deps
        shell: bash
        run: |
          chmod +x "./support/load_deps.sh"
          "./support/load_deps.sh"
      - name: Update scenarios
        run: bash support/update_scenarios_default.sh
      - name: Install browser
        shell: bash
        run: |
          chmod +x "./support/install_browser.sh"
          "./support/install_browser.sh"
      - name: Run unit tests
        run: grunt
  testStandalone:
    environment: build
    runs-on: ubuntu-latest
    name: Test Standalone
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Install node dev requirements
        run: npm install --dev
      - name: Run lint
        run: npx eslint ./js_standalone/engine/*.js
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.CROSS_TOKEN }}
          workflow: pipelines.yaml
          workflow_conclusion: success
          branch: main
          path: data
          repo: SchmidtDSE/plastics-pipeline
      - name: Move web CSV
        run: bash support/move_data.sh
      - name: Build
        shell: bash
        run: |
          chmod +x "./support/make.sh"
          chmod +x "./support/npm_install.sh"
          "./support/npm_install.sh"
          "./support/make.sh"
      - name: Install JS deps
        run: cd js_standalone; npm install
      - name: Update scenarios
        run: bash support/update_scenarios_default.sh
      - name: Execute example
        run: cd js_standalone; npm run standalone ./example.json ./test_output.json
      - name: Check output
        run: "[ ! -e test_output ] && exit 1"
  buildFigures:
    environment: build
    runs-on: ubuntu-latest
    name: Build Figures
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Install Python deps
        run: pip install -r requirements.txt
      - name: Install Processing
        run: bash support/install_processing.sh
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.CROSS_TOKEN }}
          workflow: pipelines.yaml
          workflow_conclusion: success
          branch: main
          path: data
          repo: SchmidtDSE/plastics-pipeline
      - name: Render lines
        run: python image_gen/line.py data/Pipeline\ Result/combined.db img/line.png
      - name: Render butterfly
        run: bash support/render_butterfly.sh
      - name: Check outputs
        run: bash support/check_image_outputs.sh
      - name: Snapshot images
        run: zip -r img.zip img
      - uses: actions/upload-artifact@v3
        with:
          name: img-snapshot
          path: img.zip
          if-no-files-found: error
  deploy:
    name: Deploy Web
    environment: deploy
    runs-on: ubuntu-latest
    needs: [test, buildFigures]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Render templates
        run: bash support/render_template.sh
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.CROSS_TOKEN }}
          workflow: pipelines.yaml
          workflow_conclusion: success
          branch: main
          path: data
          repo: SchmidtDSE/plastics-pipeline
      - name: Download images
        uses: actions/download-artifact@v3
        with:
          name: img-snapshot
      - name: Unzip images
        run: bash support/unzip_images.sh
      - name: Check images
        run: bash support/check_image_outputs.sh
      - name: Move web CSV
        run: bash support/move_data.sh
      - name: Build
        shell: bash
        run: |
          chmod +x "./support/make.sh"
          chmod +x "./support/npm_install.sh"
          "./support/npm_install.sh"
          "./support/make.sh"
      - name: Install JS deps
        shell: bash
        run: |
          chmod +x "./support/load_deps.sh"
          "./support/load_deps.sh"
      - name: Update scenarios
        run: bash support/update_scenarios_default.sh
      - name: Package website
        shell: bash
        run: |
          chmod +x "./support/package.sh"
          "./support/package.sh"
      - name: Upload
        uses: Creepios/sftp-action@v1.0.3
        with:
          host: ${{ secrets.SFTPHOST }}
          port: 22
          username: ${{ secrets.SFTPUSER }}
          password: ${{ secrets.SFTPPASSWORD }}
          localPath: './deploy'
          remotePath: './global-plastics-tool.org'