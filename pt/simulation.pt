# == Apply policy parameter sampling ==
in.recyclingDisplacementRate = draw uniformly from 70 to 90;  # Percent
in.recyclingLostBackfillRate = draw uniformly from 40 to 60;  # Percent
in.reusableAddedMaterial = draw uniformly from 150 to 250;  # Percent

# Regional reuse exhaustion
in.chinaReuseExhaustion = draw uniformly from 5 to 15;  # Percent annual
in.eu30ReuseExhaustion = draw uniformly from 5 to 15;  # Percent annual
in.naftaReuseExhaustion = draw uniformly from 5 to 15;  # Percent annual
in.rowReuseExhaustion = draw uniformly from 5 to 15;  # Percent annual

# Regional loss rate
in.chinaYieldLoss = draw uniformly from 20 to 30;  # Percent
in.eu30YieldLoss = draw uniformly from 20 to 30;  # Percent
in.naftaYieldLoss = draw uniformly from 20 to 30;  # Percent
in.rowYieldLoss = draw uniformly from 20 to 30;  # Percent

# Pricing
in.chinaRecyclingCost = in.chinaRecyclingCost * (draw uniformly from 0.9 to 1.1);
in.chinaIncinerationCost = in.chinaIncinerationCost * (draw uniformly from 0.9 to 1.1);
in.chinaLandfillCost = in.chinaLandfillCost * (draw uniformly from 0.9 to 1.1);

in.eu30RecyclingCost = in.eu30RecyclingCost * (draw uniformly from 0.9 to 1.1);
in.eu30IncinerationCost = in.eu30IncinerationCost * (draw uniformly from 0.9 to 1.1);
in.eu30LandfillCost = in.eu30LandfillCost * (draw uniformly from 0.9 to 1.1);

in.naftaRecyclingCost = in.naftaRecyclingCost * (draw uniformly from 0.9 to 1.1);
in.naftaIncinerationCost = in.naftaIncinerationCost * (draw uniformly from 0.9 to 1.1);
in.naftaLandfillCost = in.naftaLandfillCost * (draw uniformly from 0.9 to 1.1);

in.rowRecyclingCost = in.rowRecyclingCost * (draw uniformly from 0.9 to 1.1);
in.rowIncinerationCost = in.rowIncinerationCost * (draw uniformly from 0.9 to 1.1);
in.rowLandfillCost = in.rowLandfillCost * (draw uniformly from 0.9 to 1.1);

# Tax
in.chinaTaxOffset = draw normally from mean of 0.0 std of 0.4;
in.eu30TaxOffset = draw normally from mean of 0.0 std of 1.2;
in.naftaTaxOffset = draw normally from mean of 0.0 std of 11.8;
in.rowTaxOffset = draw normally from mean of 0.0 std of 10.7;

# Tax response
in.chinaTaxMultiplier = draw uniformly from 0.087 to 0.088;
in.eu30TaxMultiplier = draw uniformly from 0.559 to 0.580;
in.naftaTaxMultiplier = draw uniformly from 0.111 to 0.125;
in.rowTaxMultiplier = draw uniformly from 0.221 to 0.240;

# == Apply BAU sampling ==
in.chinaPreConsumptionMultiplier = 100;  # Enable China consumption offset
in.eu30PreConsumptionMultiplier = 100;  # Enable EU30 consumption offset
in.naftaPreConsumptionMultiplier = 100;  # Enable NA consumption offset
in.rowPreConsumptionMultiplier = 100;  # Enable MW consumption offset

in.chinaPreEolMultiplier = 100;  # Enable China EOL offset
in.eu30PreEolMultiplier = 100;  # Enable EU30 EOL offset
in.naftaPreEolMultiplier = 100;  # Enable NA EOL offset
in.rowPreEolMultiplier = 100;  # Enable MW EOL offset

in.amortizedModelOffset = 0;

# Reflect that we compound 28 years with 5 samples per year
var numYears = meta.year - 2021;
limit numYears to [1, ];
var samplesPerYear = 5;

# China consumption
in.chinaPreConsumptionAgricultureMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.81
  )
);

in.chinaPreConsumptionConstructionMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.81
  )
);

in.chinaPreConsumptionElectronicMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.81
  )
);

in.chinaPreConsumptionHouseholdLeisureSportsMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.81
  )
);

in.chinaPreConsumptionPackagingMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.81
  )
);

in.chinaPreConsumptionTransportationMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.81
  )
);

in.chinaPreConsumptionTextileMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.81
  )
);

in.chinaPreConsumptionOtherMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.81
  )
);

# China other
in.chinaPreDeltaRecyclingPercent = draw normally from mean of 0.0 std of 3.4;
in.chinaPreDeltaIncinerationPercent = draw normally from mean of 0.0 std of 3.4;
in.chinaPreDeltaLandfillPercent = draw normally from mean of 0.0 std of 3.4;
in.chinaPreDeltaMismanagedPercent = draw normally from mean of 0.0 std of 3.4;
in.chinaPreDeltaGoodsImportPercent = draw normally from mean of 0.0 std of 2.6;
in.chinaPreDeltaWasteImportPercent = draw normally from mean of 0.0 std of 1.4;

# EU30 consumption
in.eu30PreConsumptionAgricultureMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 0.90
  )
);

in.eu30PreConsumptionConstructionMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 0.90
  )
);

in.eu30PreConsumptionElectronicMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 0.90
  )
);

in.eu30PreConsumptionHouseholdLeisureSportsMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 0.90
  )
);

in.eu30PreConsumptionPackagingMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 0.90
  )
);

in.eu30PreConsumptionTransportationMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 0.90
  )
);

in.eu30PreConsumptionTextileMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 0.90
  )
);

in.eu30PreConsumptionOtherMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 0.90
  )
);

# EU30 other
in.eu30PreDeltaRecyclingPercent = draw normally from mean of 0.0 std of 2.3;
in.eu30PreDeltaIncinerationPercent = draw normally from mean of 0.0 std of 2.3;
in.eu30PreDeltaLandfillPercent = draw normally from mean of 0.0 std of 2.3;
in.eu30PreDeltaMismanagedPercent = draw normally from mean of 0.0 std of 2.3;
in.eu30PreDeltaGoodsImportPercent = draw normally from mean of 0.0 std of 1.0;
in.eu30PreDeltaWasteImportPercent = draw normally from mean of 0.0 std of 1.4;

# North America consumption
in.naftaPreConsumptionAgricultureMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.17
  )
);

in.naftaPreConsumptionConstructionMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.17
  )
);

in.naftaPreConsumptionElectronicMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.17
  )
);

in.naftaPreConsumptionHouseholdLeisureSportsMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.17
  )
);

in.naftaPreConsumptionPackagingMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.17
  )
);

in.naftaPreConsumptionTransportationMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.17
  )
);

in.naftaPreConsumptionTextileMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.17
  )
);

in.naftaPreConsumptionOtherMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 1.17
  )
);

# North America other
in.naftaPreDeltaRecyclingPercent = draw normally from mean of 0.0 std of 0.8;
in.naftaPreDeltaIncinerationPercent = draw normally from mean of 0.0 std of 0.8;
in.naftaPreDeltaLandfillPercent = draw normally from mean of 0.0 std of 0.8;
in.naftaPreDeltaMismanagedPercent = draw normally from mean of 0.0 std of 0.8;
in.naftaPreDeltaGoodsImportPercent = draw normally from mean of 0.0 std of 1.8;
in.naftaPreDeltaWasteImportPercent = draw normally from mean of 0.0 std of 0.8;

# Majority World consumption
in.rowPreConsumptionAgricultureMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 2.23
  )
);

in.rowPreConsumptionConstructionMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 2.23
  )
);

in.rowPreConsumptionElectronicMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 2.23
  )
);

in.rowPreConsumptionHouseholdLeisureSportsMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 2.23
  )
);

in.rowPreConsumptionPackagingMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 2.23
  )
);

in.rowPreConsumptionTransportationMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 2.23
  )
);

in.rowPreConsumptionTextileMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 2.23
  )
);

in.rowPreConsumptionOtherMT = sum numYears repeats of (
  average samplesPerYear repeats of (
    draw normally from mean of 0.0 std of 2.23
  )
);

# Majority World other
in.rowPreDeltaRecyclingPercent = draw normally from mean of 0.0 std of 1.3;
in.rowPreDeltaIncinerationPercent = draw normally from mean of 0.0 std of 1.3;
in.rowPreDeltaLandfillPercent = draw normally from mean of 0.0 std of 1.3;
in.rowPreDeltaMismanagedPercent = draw normally from mean of 0.0 std of 1.3;
in.rowPreDeltaGoodsImportPercent = draw normally from mean of 0.0 std of 2.0;
in.rowPreDeltaWasteImportPercent = draw normally from mean of 0.0 std of 1.5;

# == Set Policies ==

# Optionally set policies to be active during simulation. This is left blank by default.
