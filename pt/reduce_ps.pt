# Determine how much material we are dropping
var psReductionPercent = in.{{ region }}PercentReducePs / 100;
var percentPackagingPs = 0.034;
var originalPackagingMT = out.{{ region }}.consumptionPackagingMT;
var reducedMaterialMT = originalPackagingMT * percentPackagingPs * psReductionPercent;
var offsetGoalMT = -1 * reducedMaterialMT;

# Apply gradually for immediate effects
var offsetMT = 0;
change offsetMT by offsetGoalMT over in.startYear to in.endYearImmediate;

# Apply with lifetime offset for waste
var offsetLifecycleMT = 0;
var lifecycleDuration = lifecycle of [ out.{{ region }}.consumptionPackagingMT ];
var lifecycleStart = in.startYear + lifecycleDuration;
var lifecycleEnd = in.endYearImmediate + lifecycleDuration;
change offsetLifecycleMT by offsetGoalMT over lifecycleStart to lifecycleEnd;

# Apply change to consumption
out.{{ region }}.consumptionPackagingMT = originalPackagingMT + offsetMT;

# Apply change to waste
distribute offsetLifecycleMT across [
  out.{{ region }}.eolRecyclingMT,
  out.{{ region }}.eolLandfillMT,
  out.{{ region }}.eolIncinerationMT,
  out.{{ region }}.eolMismanagedMT
] proportionally;

# Apply change to production
var priorImports = out.{{ region }}.netImportsMT;

distribute offsetMT across [
  out.{{ region }}.netImportsMT,
  out.{{ region }}.domesticProductionMT
] proportionally;

var changeImports = out.{{ region }}.netImportsMT - priorImports;

# Apply change to trade
distribute changeImports across [
  {{#each otherRegions}}
  out.{{this}}.netExportsMT{{#unless @last}},{{/unless}}
  {{/each}}
] proportionally;
