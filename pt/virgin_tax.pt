# Use assumption for percent consumption decrease per cent
var rateDecreaseGoal = in.{{region}}VirginTaxCents * in.percentDecreasePerCent / 100;

# Assume gradually applied
var rateDecreaseConsumption = 0;
change rateDecreaseConsumption by rateDecreaseGoal over in.startYear to in.endYearImmediate;

var rateDecreaseWaste = 0;
var lifecycleDuration = [
  out.{{ region }}.consumptionPackagingMT,
  out.{{ region }}.consumptionConstructionMT,
  out.{{ region }}.consumptionTextileMT,
  out.{{ region }}.consumptionHouseholdLeisureSportsMT,
  out.{{ region }}.consumptionElectronicMT,
  out.{{ region }}.consumptionTransporationMT,
  out.{{ region }}.consumptionAgricultureMT,
  out.{{ region }}.consumptionOtherMT
];
var lifecycleStart = in.startYear + lifecycleDuration;
var lifecycleEnd = in.endYearImmediate + lifecycleDuration;
change rateDecreaseWaste by rateDecreaseGoal over lifecycleStart to lifecycleEnd;

# Determine by how much to reduce consumption
var totalConsumption = (
  out.{{ region }}.consumptionPackagingMT +
  out.{{ region }}.consumptionConstructionMT +
  out.{{ region }}.consumptionTextileMT +
  out.{{ region }}.consumptionHouseholdLeisureSportsMT +
  out.{{ region }}.consumptionElectronicMT +
  out.{{ region }}.consumptionTransporationMT +
  out.{{ region }}.consumptionAgricultureMT +
  out.{{ region }}.consumptionOtherMT
);
var reductionConsumption = rateDecreaseConsumption * totalConsumption;
var offsetConsumption = -1 * reductionConsumption;

# Determine by how much to reduce waste
var totalWaste = (
  out.{{ region }}.eolLandfillMT +
  out.{{ region }}.eolIncinerationMT +
  out.{{ region }}.eolMismanagedMT +
  out.{{ region }}.eolRecyclingMT + 
  out.{{ region }}.netWasteExportMT
);
var reductionWaste = rateDecreaseWaste * totalWaste;
var offsetWaste = -1 * reductionWaste;

# Reduce consumption
distribute offsetConsumption across [
  out.{{ region }}.consumptionPackagingMT,
  out.{{ region }}.consumptionConstructionMT,
  out.{{ region }}.consumptionTextileMT,
  out.{{ region }}.consumptionHouseholdLeisureSportsMT,
  out.{{ region }}.consumptionElectronicMT,
  out.{{ region }}.consumptionTransporationMT,
  out.{{ region }}.consumptionAgricultureMT,
  out.{{ region }}.consumptionOtherMT
];

# Reduce waste
distribute offsetWaste across [
  out.{{ region }}.eolLandfillMT,
  out.{{ region }}.eolIncinerationMT,
  out.{{ region }}.eolMismanagedMT,
  out.{{ region }}.eolRecyclingMT
] proportionally;

# Reduce production
var priorImports = out.{{region}}.netImportsMT;

distribute offsetConsumption across [
  out.{{region}}.netExportsMT,
  out.{{region}}.domesticProductionMT
] proportionally;

var changeImports = out.{{region}}.netImportsMT - priorImports;

# Reduce exports
distribute changeImports across [
  {{#each otherRegions}}
  out.{{this}}.netExportsMT{{#unless @last}},{{/unless}}
  {{/each}}
] proportionally;