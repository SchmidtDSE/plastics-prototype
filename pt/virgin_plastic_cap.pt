# Determine the delta
var totalConsumption = (
  out.{{ region }}.consumptionPackagingMT + 
  out.{{ region }}.consumptionConstructionMT + 
  out.{{ region }}.consumptionTextitleMT + 
  out.{{ region }}.consumptionHouseholdLeisureSportsMT + 
  out.{{ region }}.consumptionElectronicMT + 
  out.{{ region }}.consumptionTransporationMT + 
  out.{{ region }}.consumptionAgricultureMT + 
  out.{{ region }}.consumptionOtherMT
);

# User set goals
var goalReductionMT = totalConsumption - in.{{ region }}VirginPlasticCap;
limit goalReductionMT to [0,];

# Make that change happen over time
var acutalDeltaMT = 0;
change acutalDeltaMT by goalReductionMT over 2020 to 2050;  # Step 3
var offset = -1 * acutalDeltaMT;

# Split offset across recycling and reduced consumption
var backfill = in.recyclingBackfillRate / 100;
var offsetRecycling = offset * backfill;
var offsetConsumption = offset * (1 - backfill);

# Update consumption
distribute offsetConsumption across [
  out.{{ region }}.consumptionPackagingMT,
  out.{{ region }}.consumptionConstructionMT,
  out.{{ region }}.consumptionTextitleMT,
  out.{{ region }}.consumptionHouseholdLeisureSportsMT,
  out.{{ region }}.consumptionElectronicMT,
  out.{{ region }}.consumptionTransporationMT,
  out.{{ region }}.consumptionAgricultureMT,
  out.{{ region }}.consumptionOtherMT
] proportionally;

# Update production
var priorImports = out.{{ region }}.netImportsMT;
distribute offsetConsumption across [
  out.{{ region }}.netImportsMT,
  out.{{ region }}.domesticProductionMT
] proportionally;
var importsOffset = out.{{ region }}.netImportsMT - priorImports;

# Update the EOL
distribute offsetConsumption across [
  out.{{ region }}.eolLandfillMT,
  out.{{ region }}.eolIncinerationMT,
  out.{{ region }}.eolMismanagedMT
] proportionally;

out.{{ region }}.eolRecyclingMT = out.{{ region }}.eolRecyclingMT + offsetRecycling;

# Offset exports elsewhere
distribute importsOffset across [
  {{#each otherRegions}}
  out.{{this}}.netExportsMT{{#unless @last}},{{/unless}}
  {{/each}}
] proportionally;